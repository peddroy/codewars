mul_vec <- 0
for (i in n:(m-1)) {
if(n == 0 & m == 0 | n < 0 | m < 0){
return('INVALID')
}
if (n > m) {
return(0)
}
if((i %% n) == 0) {
mul_vec <- append(mul_vec, i)
}
i <- i + 1
}
return(sum(mul_vec))
}
sum_mul(2, 9)
sum_mul(21, 9)
sum_mul(2, 2)
sum_mul <- function(n, m){
mul_vec <- 0
for (i in n:(m-1)) {
if(n == 0 & m == 0 | n < 0 | m < 0){
return('INVALID')
}
if (n > m | n == m) {
return(0)
}
if((i %% n) == 0) {
mul_vec <- append(mul_vec, i)
}
i <- i + 1
}
return(sum(mul_vec))
}
sum_mul(2, 2)
sum_mul(0, 2)
sum_mul <- function(n, m){
mul_vec <- 0
for (i in n:(m-1)) {
if(n == 0 | m == 0 | n < 0 | m < 0){
return('INVALID')
}
if (n > m | n == m) {
return(0)
}
if((i %% n) == 0) {
mul_vec <- append(mul_vec, i)
}
i <- i + 1
}
return(sum(mul_vec))
}
sum_mul(0, 2)
sum_mul <- function(n, m){
mul_vec <- 0
for (i in n:(m-1)) {
if(n == 0 | m == 0 | n < 0 | m < 0){
return('INVALID')
}
if (n > m | n == m) {
return(0)
}
if((i %% n) == 0) {
mul_vec <- append(mul_vec, i)
}
i <- i + 1
}
return(sum(mul_vec))
return(class(mult_vec))
}
sum_mul(0, 2)
sum_mul <- function(n, m){
mul_vec <- 0
for (i in n:(m-1)) {
if(n == 0 | m == 0 | n < 0 | m < 0){
return('INVALID')
}
if (n > m | n == m) {
return(0)
}
if((i %% n) == 0) {
mul_vec <- append(mul_vec, i)
}
i <- i + 1
}
return(c(sum(mul_vec),class(mul_vec)))
return(class(mul_vec))
}
sum_mul(0, 2)
View(sum_mul)
sum_mul <- function(n, m){
mul_vec <- 0
for (i in n:(m-1)) {
if(n == 0 | m == 0 | n < 0 | m < 0){
return('INVALID')
}
if (n > m | n == m) {
return(0)
}
if((i %% n) == 0) {
mul_vec <- append(mul_vec, i)
}
i <- i + 1
}
return(c(sum(mul_vec),class(mul_vec)))
}
sum_mul(0, 2)
sum_mul(2, 9)
pedro <- c(1,2,3,4)
class(pedro)
sum_mul(2,9)
print(c(1:3))
s <- "hello world!"
class(s)
?split
?strsplit
strsplit(s)
strsplit(x = s)
strsplit(s, '')
strsplit(s, ' ')
strsplit(s, ' ')[-1]
s <- strsplit(s, ' ')
s
s[-1]
s[,-1]
?reverse
??reverse
s <- rev(strsplit(s, ' '))
s <- "hello world!"
s <- rev(strsplit(s, ' '))
s
s <- "hello world!"
s <- (strsplit(s, ' '))
rev(s)
s
rev(s)
s <- "hello world!"
x <- (strsplit(s, ' '))
rev(x)
?rev
x <- rev(x)
x
View(x)
s <- "hello world!"
x <- (strsplit(s, ' '))
x
x <- rev(x)
x
x <- x[-1]
x
return(x
return(x)
print(x)
s <- "hello world!"
x <- (strsplit(s, ' '))
x
x <- x[-1]
x <- (strsplit(s, ' '))
x
print(x)
x <- x[[-1]]
x <- (strsplit(s, ' '))
s <- "hello world!"
x <- (strsplit(s, ' '))
x
list.reverse(x)
stri.reverse(x)
?strsplit
stringi::stri_reverse(x)
stri.reverse(x)
stringi::stri_reverse(x)
t <- c(1,2,3,4)
rev(t)
x <- unlist(strsplit(s, ' '))
rev(x)
x <- rev(unlist(strsplit(s, ' ')))
x
print(rev(unlist(strsplit(s, ' '))))
s <- "hello world!"
solution <- function(sentence){
return(rev(unlist(strsplit(s, ' '))))
}
solution(s)
s <- "hello world!"
solution <- function(sentence){
return(toString(rev(unlist(strsplit(s, ' ')))))
}
solution(s)
s <- "hello world!"
solution <- function(sentence){
w <- toString(rev(unlist(strsplit(s, ' '))))
}
solution(s)
solution <- function(sentence){
w <- toString(rev(unlist(strsplit(s, ' '))))
return(w)
}
solution(s)
w <- toString(rev(unlist(strsplit(s, ' '))))
return(w)
w <- toString(rev(unlist(strsplit(s, ' '))))
w
w <-rev(unlist(strsplit(s, ' '))))
w
w <-unlist(strsplit(s, ' ')))
w
class(w)
w <- order(s,)
?order
print(rev(s))
s <- "hello world!"
print(rev(s))
print(j)
j <- rev(s)
print(j)
s <- "hello world!"
j <- rev(s)
print(j)
s <- "hello world!"
g <- strsplit(s,NULL)[[1]]
j <- rev(s)
print(j)
j <- rev(g)
print(j)
s <- "hello world!"
s <- strsplit(s, ' ')
s
s <- unlist(s)
print(s)
s <- rev(s)
s <- strsplit(s, '')
View(s)
s <- unlist(s)
s <- toString(s)
s <- "hello world!"
s <- strsplit(s, ' ')
s <- unlist(s)
s <- rev(s)
s <- strsplit(s, '')
s <- unlist(s)
s <- rev(s)
s <- "hello world!"
s <- strsplit(s, ' ')
s <- unlist(s)
s <- rev(s)
s <- toString(s)
s <- gsub(',', '')
s <- gsub(s, ',', '')
s <- gsub(',', '', s)
s <- "hello world!"
s <- strsplit(s, ' ')
s <- unlist(s)
s <- rev(s)
s <- toString(s)
s <- gsub(',', '', s)
w <- gsub(',', '', toString(rev(unlist(strsplit(s, ' ')))))
return(w)
s <- "hello world!"
solution(s)
solution <- function(sentence){
w <- gsub(',', '', toString(rev(unlist(strsplit(s, ' ')))))
return(w)
}
solution(s)
solution <- function(sentence){
return(gsub(',', '', toString(rev(unlist(strsplit(s, ' '))))))
}
solution(s)# Clever
s <- "yoda doesn't speak like this"
solution(s)
gc()
s <- "atmosphere"
reverse_chars <- function(string)
{
# split string by characters
string_split = strsplit(string, split = "")
# reverse order
rev_order = nchar(string):1
# reversed characters
reversed_chars = string_split[[1]][rev_order]
# collapse reversed characters
paste(reversed_chars, collapse = "")
}
reverse_chars(s)
reverse_chars(s)
# split string by characters
string_split = strsplit(s, split = "")
string_split
# reverse order
rev_order = nchar(string):1
# reverse order
rev_order = nchar(s):1
rev_order
j <- rev(s)
j
s <- "atmosphere"
# split string by characters
string_split = strsplit(s, split = "")
string_split
string_split[[1]]
string_split[[2]]
s <- "atmosphere is good to"
# split string by characters
string_split = strsplit(s, split = " ")
string_split[[2]]
string_split
string_split[[1]]
s <- c("atmosphere is good to", 'marta says'
s <- c("atmosphere is good to", 'marta says')
s <- c("atmosphere is good to", 'marta says')
# split string by characters
string_split = strsplit(s, split = " ")
s
# split string by characters
string_split = strsplit(s, split = " ")
string_split
string_split[[1]]
string_split[[2]]
split_words <- strsplit(s, split=' ')
split_words
s <- "yoda doesn't speak like this"
split_words <- strsplit(s, split=' ')
split_words
words_amount <- lenght(split_words)
words_amount <- lenght(split_words)
words_amount <- length(split_words)
words_amount
words_amount <- length(split_words)[[1]]
words_amount
words_amount <- length(split_words[[1]])
words_amount
words_amount <- length(split_words[[1]])-1
words_amount
reverse_sentece <- split_words[[1]][words_amount]1
reverse_sentece <- split_words[words_amount]
reverse_sentece
reverse_sentece <- split_words[words_amount[-1]]
reverse_sentece
split_words[:1]
split_words
reverse_sentece <- split_words[words_amount:1]
reverse_sentece
s <- "yoda doesn't speak like this"
split_words <- strsplit(s, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentece <- split_words[words_amount:1]
reverse_sentece
reverse_sentece <- split_words[[1]][words_amount:1]
reverse_sentece
s <- "alfa"
split_words <- strsplit(s, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentece <- split_words[[1]][words_amount:1]
reverse_sentece
sentece <- "hello world!"
split_words <- strsplit(s, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentece <- split_words[[1]][words_amount:1]
paste(reverse_sentece)
sentece <- "hello world!"
sentence <- "hello world!"
split_words <- strsplit(sentence, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentece <- split_words[[1]][words_amount:1]
paste(reverse_sentece)
paste(as.character(reverse_sentece))
sentence <- "hello world!"
split_words <- strsplit(sentence, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentece <- split_words[[1]][words_amount:1]
sentence <- "hello world!"
split_words <- strsplit(sentence, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentence <- split_words[[1]][words_amount:1]
paste(as.character(reverse_sentence))
reverse_sentence <- split_words[[1]][words_amount:1]
paste(reverse_sentence)
reverse_sentence <- split_words[[1]][words_amount:1]
sentence <- "hello world!"
split_words <- strsplit(sentence, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentence <- split_words[[1]][words_amount:1]
paste(reverse_sentence)
reverse_sentence[[1]]
reverse_sentence[[1]] + reverse_sentence[[2]]
c(reverse_sentence[[1]] + reverse_sentence[[2]])
c(reverse_sentence[[1]], reverse_sentence[[2]])
paste(reverse_sentence, collapse = ' ')
sentence <- "hello world!"
solution <- function(sentence){
split_words <- strsplit(sentence, split=' ')
words_amount <- length(split_words[[1]])
reverse_sentence <- split_words[[1]][words_amount:1]
paste(reverse_sentence, collapse = ' ')
}
solution(sentence)
load("~/my-road-to-R/personal-studies/codewars/.RData")
load("~/my-road-to-R/personal-studies/codewars/.RData")
well <- c('bad', 'bad', 'bad')
well <- c('bad', 'bad', 'good')
for (i in well) {
print(i)
}
well <- c('bad', 'bad', 'good')
count_good <- 0
for (i in well) {
if (i == 'good') {
count_good <- count_good + 1
}
}
if (count_good == 0) {
paste('Fail!')
} else if (count_good == 1) {
paste('Publish!')
} else {
paste('I smell a series!')
}
well <- c('bad', 'good', 'good')
count_good <- 0
for (i in well) {
if (i == 'good') {
count_good <- count_good + 1
}
}
if (count_good == 0) {
paste('Fail!')
} else if (count_good == 1) {
paste('Publish!')
} else {
paste('I smell a series!')
}
well <- c('bad', 'good', 'bad')
count_good <- 0
for (i in well) {
if (i == 'good') {
count_good <- count_good + 1
}
}
if (count_good == 0) {
paste('Fail!')
} else if (count_good == 1) {
paste('Publish!')
} else {
paste('I smell a series!')
}
well <- c('bad', 'bad', 'bad')
count_good <- 0
for (i in well) {
if (i == 'good') {
count_good <- count_good + 1
}
}
if (count_good == 0) {
paste('Fail!')
} else if (count_good == 1) {
paste('Publish!')
} else {
paste('I smell a series!')
}
x <- c('bad', 'bad', 'bad')
well <- function(x) {
count_good <- 0
for (i in x) {
if (i == 'good') {
count_good <- count_good + 1
}
}
if (count_good == 0) {
paste('Fail!')
} else if (count_good == 1) {
paste('Publish!')
} else {
paste('I smell a series!')
}
}
weel(x)
wel(x)
well(x)
x <- c('bad', 'good', 'bad')
well <- function(x) {
count_good <- 0
for (i in x) {
if (i == 'good') {
count_good <- count_good + 1
}
}
if (count_good == 0) {
paste('Fail!')
} else if (count_good == 1) {
paste('Publish!')
} else {
paste('I smell a series!')
}
}
well(x)
x <- c('bad', 'good', 'good')
well(x)
sum(x)
sum(x == good)
sum(x == 'good')
gc()
abbrev_name <- "Sam Harris"
split_name <- strsplit(abbrev_name, ' ')
split_name
split_name[[1]]
split_name[,[1]]
split_name[[1]]
split_name <- str_split(split_name, '')
split_name <- strsplit(split_name, '')
as.character(split_name)
lenght(split_name)
length(split_name)
